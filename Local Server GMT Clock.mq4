//*************************************************************************************************************************************************************
//*************************************************************************************************************************************************************
//*************************************************************************************************************************************************************
//*************************************************************************************************************************************************************
//***********************************************                                                              ************************************************
//***********************************************                                                              ************************************************
//***********************************************                                                              ************************************************
//***********************************************                                                              ************************************************
//***********************************************                 LOCAL SERVER GMT CLOCK                       ************************************************
//***********************************************                                                              ************************************************
//***********************************************                                                              ************************************************
//***********************************************                                                              ************************************************
//***********************************************                                                              ************************************************
//*************************************************************************************************************************************************************
//*************************************************************************************************************************************************************
//*************************************************************************************************************************************************************
//*************************************************************************************************************************************************************
//+------------------------------------------------------------------+
//|                                       Local Server GMT Clock.mq4 |
//|                                                     Michal Herda |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property link      "https://www.mql5.com"
#property version   "1.00"
#property description "Simply Clock. \nLocal Time As Default. \nSelect: Local/Server/GMT As Input. \nPlease Take Into Account That The Local Time Is The Most Accurate "
#property description "However This Clock Uses LocalTime Seconds, \nDelays Can Occur When Changing Minutes Or Hours, If Local Time Is Not Selected. "
#property strict
///////////////////////////////////////////////////////////////////////////////////
#include <Controls\Dialog.mqh>
#include <Controls\Edit.mqh>
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                ////////////////////
/////////////////          GUI CLASS             ////////////////////
/////////////////           DEFINES              ////////////////////
/////////////////                                ////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
//indent and gaps
#define INDENT_TOP                                     (8)
#define INDENT_LEFT                                    (15)
//for Edit
#define EDIT_HEIGHT                                    (20)
#define EDIT_WIDTH                                     (30)
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                ////////////////////
/////////////////          GUI CLASSES           ////////////////////
/////////////////          DEFINITION            ////////////////////
/////////////////                                ////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
//**************************************************************************************************************************************************************
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                ////////////////////
/////////////////        CMainMenu CLASS         ////////////////////
/////////////////           DEFINITION           ////////////////////
/////////////////                                ////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
class CMainMenu : public CAppDialog
  {
public:
      CEdit                        m_edit1  ;
      CEdit                        m_edit2  ;
      CEdit                        m_edit3  ;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                   CMainMenu (void) ;
                                  ~CMainMenu (void) ;
//--- create
      virtual bool                 Create (const long chart,const string name,const int subwin,const int x1,const int y1,const int x2,const int y2) ;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//--- chart event handler
      virtual bool                 OnEvent (const int id,const long &lparam,const double &dparam,const string &sparam) ;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//--- create dependent controls  
      bool                         CreateEdit1          (void) ;
      bool                         CreateEdit2          (void) ;
      bool                         CreateEdit3          (void) ;     
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   };
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                  //////////////////
/////////////////            EVENT                 //////////////////
/////////////////           HANDLING               //////////////////
/////////////////                                  //////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
EVENT_MAP_BEGIN (CMainMenu)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EVENT_MAP_END (CAppDialog)   
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                  //////////////////
/////////////////        CONSTRUCTOR               //////////////////
/////////////////        DESTRUCTOR                //////////////////
/////////////////                                  //////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
//+------------------------------------------------------------------+
//| Constructor                                                      |
//+------------------------------------------------------------------+
CMainMenu:: CMainMenu (void)
  {
  }
//+------------------------------------------------------------------+
//| Destructor                                                       |
//+------------------------------------------------------------------+
CMainMenu::~CMainMenu (void)
  {
  }
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                  //////////////////
/////////////////            CREATE                //////////////////
/////////////////                                  //////////////////
/////////////////                                  //////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
//+------------------------------------------------------------------+
//| Create                                                           |
//+------------------------------------------------------------------+
bool CMainMenu::Create (const long chart,const string name,const int subwin,const int x1,const int y1,const int x2,const int y2)
  {
   if (!CAppDialog::Create(chart,name,subwin,x1,y1,x2,y2))
      return(false) ;
   if (!CreateEdit1())
      return(false) ;
   if (!CreateEdit2())
      return(false) ;
   if (!CreateEdit3())
      return(false) ;       
//--- succeed  
   return(true);  
    }
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                ////////////////////
/////////////////       GLOBAL VARIABLES         ////////////////////
/////////////////                                ////////////////////
/////////////////                                ////////////////////
/////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////// 
CMainMenu                                                MainWindow ;
enum AppliedTime              { Local_Time, Server_Time, GMT_Time } ;  
extern AppliedTime Time_Mode =                           Local_Time ;   
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                ////////////////////
/////////////////           ON_INIT              ////////////////////
/////////////////                                ////////////////////
/////////////////                                ////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
 //--- create timer
   EventSetMillisecondTimer(1);  
//--- create application dialog
if ( Time_Mode == Local_Time )
   {
   if(!MainWindow.Create (0,"       Local Time ",0,40,40,200,105) )
      return (INIT_FAILED) ;
   }
if ( Time_Mode == Server_Time )
   {
   if(!MainWindow.Create (0,"       Server Time ",0,40,40,200,105) )
      return (INIT_FAILED) ;
   }
if ( Time_Mode == GMT_Time )
   {
   if(!MainWindow.Create (0,"         GMT Time ",0,40,40,200,105) )
      return (INIT_FAILED) ;
   }
//--- run application
   MainWindow.Run() ;
//--- enable object create events
   ChartSetInteger (ChartID(), CHART_EVENT_OBJECT_CREATE, true) ;
//--- enable object delete events
   ChartSetInteger (ChartID(), CHART_EVENT_OBJECT_DELETE, true) ;
//--- succeed
   return(INIT_SUCCEEDED) ;
//---
 }
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                ////////////////////
/////////////////           ON_DEINIT            ////////////////////
/////////////////                                ////////////////////
/////////////////                                ////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
//---
   Comment("") ;
//--- destroy dialog
   MainWindow.Destroy(reason) ;
  }
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                ////////////////////
/////////////////           CHART_EVENT          ////////////////////
/////////////////                                ////////////////////
/////////////////                                ////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
//+------------------------------------------------------------------+
//| ChartEvent function                                              |
//+------------------------------------------------------------------+
void OnChartEvent(const int id,
                  const long &lparam,
                  const double &dparam,
                  const string &sparam)
  {
//---
   MainWindow.ChartEvent(id,lparam,dparam,sparam) ;
//////////////////////////////////////////////////////////////////////
  }
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                  //////////////////
/////////////////            CREATE                //////////////////
/////////////////            EDIT 1                //////////////////
/////////////////                                  //////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
bool CMainMenu::CreateEdit1(void)
  {
//--- coordinates
   int x1 = INDENT_LEFT  ;
   int y1 = INDENT_TOP ;
   int x2 = x1 + EDIT_WIDTH ;
   int y2 = y1 + EDIT_HEIGHT ;  
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//--- create
   if(!m_edit1.Create(m_chart_id,"Edit1",m_subwin,x1,y1,x2,y2))
      return(false) ;
   if(!m_edit1.Text ( IntegerToString ( TimeHour ( TimeLocal () ) ) ) )
      return(false) ;
   if(!m_edit1.ReadOnly(true))
      return(false) ;
   if(!m_edit1.TextAlign(ALIGN_CENTER))
      return(true) ;  
   if(!ObjectSetString(0,"Edit1",OBJPROP_TOOLTIP,"Current Hour"))
      return (false) ; 
   if ( !Add (m_edit1) )
      return(false) ;   
//--- succeed
   return(true);
  }
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                  //////////////////
/////////////////            CREATE                //////////////////
/////////////////            EDIT 2                //////////////////
/////////////////                                  //////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
bool CMainMenu::CreateEdit2(void)
  {
//--- coordinates
   int x1 = ( 2 * INDENT_LEFT ) + EDIT_WIDTH ;
   int y1 = INDENT_TOP  ;
   int x2 = x1 + EDIT_WIDTH ;
   int y2 = y1 + EDIT_HEIGHT ;  
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//--- create
   if(!m_edit2.Create(m_chart_id,"Edit2",m_subwin,x1,y1,x2,y2))
      return(false) ;
   if(!m_edit2.Text ( IntegerToString ( TimeMinute ( TimeLocal() ) ) ) )
      return(false) ;
   if(!m_edit2.ReadOnly(true))
      return(false) ;
   if(!m_edit2.TextAlign(ALIGN_CENTER))
      return(true) ;  
   if(!ObjectSetString(0,"Edit2",OBJPROP_TOOLTIP,"Current Minute"))
      return (false) ; 
   if ( !Add (m_edit2) )
      return(false) ;   
//--- succeed
   return(true);
  }
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                  //////////////////
/////////////////            CREATE                //////////////////
/////////////////            EDIT 3                //////////////////
/////////////////                                  //////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
bool CMainMenu::CreateEdit3(void)
  {
//--- coordinates
   int x1 = ( 3 * INDENT_LEFT ) + ( 2 * EDIT_WIDTH )  ;
   int y1 = INDENT_TOP ;
   int x2 = x1 + EDIT_WIDTH ;
   int y2 = y1 + EDIT_HEIGHT ;  
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//--- create
   if(!m_edit3.Create(m_chart_id,"Edit3",m_subwin,x1,y1,x2,y2))
      return(false) ;
   if(!m_edit3.Text(IntegerToString( TimeSeconds ( TimeLocal () ) ) ) )
      return(false) ;
   if(!m_edit3.ReadOnly(true))
      return(false) ;
   if(!m_edit3.TextAlign(ALIGN_CENTER))
      return(true) ;  
   if(!ObjectSetString(0,"Edit3",OBJPROP_TOOLTIP,"Current Second"))
      return (false) ; 
   if ( !Add (m_edit3) )
      return(false) ;   
//--- succeed
   return(true);
  }

//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                  //////////////////
/////////////////             ON TICK              //////////////////
/////////////////                                  //////////////////
/////////////////                                  //////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
void OnTick()
  {

  }         
        
//+------------------------------------------------------------------+
//| Timer function                                                   |
//+------------------------------------------------------------------+
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////                                  //////////////////
/////////////////             ON TIMER             //////////////////
/////////////////                                  //////////////////
/////////////////                                  //////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
void OnTimer()
  {
    datetime Tempus ;
    if ( Time_Mode == Local_Time  ) Tempus = TimeLocal   () ;
    if ( Time_Mode == Server_Time ) Tempus = TimeCurrent () ;
    if ( Time_Mode == GMT_Time    ) Tempus = TimeGMT     () ;
    ChartRedraw();
  
//---
    if ( TimeHour ( TimeLocal ()  ) < 10 )
      ObjectSetString(0,"Edit1",OBJPROP_TEXT, "0" + TimeHour ( Tempus )     ) ;
    else
      ObjectSetString(0,"Edit1",OBJPROP_TEXT, TimeHour ( Tempus )     ) ;
      
    if ( TimeMinute ( TimeLocal () ) < 10 )
      ObjectSetString(0,"Edit2",OBJPROP_TEXT, "0" + TimeMinute ( Tempus )   ) ;
    else
      ObjectSetString(0,"Edit2",OBJPROP_TEXT, TimeMinute( Tempus )   ) ;
      
    if ( TimeSeconds (TimeLocal() ) < 10 )
      ObjectSetString(0,"Edit3",OBJPROP_TEXT, "0" + TimeSeconds ( TimeLocal () )  ) ;  
    else
      ObjectSetString(0,"Edit3",OBJPROP_TEXT, TimeSeconds ( TimeLocal() )   ) ; 

  }
